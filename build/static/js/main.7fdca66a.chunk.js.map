{"version":3,"sources":["Icons/NoProfilePicture.component.js","App.js","reportWebVitals.js","index.js"],"names":["NoProfilePictureIconComponent","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeMiterlimit","strokeLinecap","strokeLinejoin","App","useState","imagePreview","setImagePreview","videoRef","useRef","photoRef","imgRef","previewCanvasRef","unit","crop","setCrop","completedCrop","setCompletedCrop","useEffect","getVideo","current","image","canvas","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","pixelRatio","window","devicePixelRatio","setTransform","imageSmoothingQuality","drawImage","x","y","onLoad","useCallback","img","navigator","mediaDevices","getUserMedia","video","audio","then","stream","srcObject","play","catch","error","console","log","className","src","alt","style","objectFit","type","id","name","required","accept","onChange","event","target","files","file","imageUrl","URL","createObjectURL","url","onCanPlay","photo","setInterval","getSnapshot","ref","onClick","data","toDataURL","takePhoto","display","onImageLoaded","c","onComplete","heigh","Math","round","disabled","toBlob","blob","previewUrl","generateDownload","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7fdca66a.chunk.js","sourcesContent":["import React from 'react'\n\nexport const NoProfilePictureIconComponent = () => (\n  <svg width=\"90\" height=\"100\" viewBox=\"0 0 90 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M0 4C0 1.79086 1.79086 0 4 0H86C88.2091 0 90 1.79086 90 4V96C90 98.2091 88.2091 100 86 100H4C1.79086 100 0 98.2091 0 96V4Z\"\n      fill=\"#F4F4F4\"\n    />\n    <path\n      d=\"M61 68C59.4348 60.0541 52.8261 54 45 54C37.1739 54 30.7391 60.0541 29 68\"\n      stroke=\"#999999\"\n      strokeWidth=\"2\"\n      strokeMiterlimit=\"10\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path\n      d=\"M45 48C49.4183 48 53 44.4183 53 40C53 35.5817 49.4183 32 45 32C40.5817 32 37 35.5817 37 40C37 44.4183 40.5817 48 45 48Z\"\n      stroke=\"#999999\"\n      strokeWidth=\"2\"\n      strokeMiterlimit=\"10\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n)\n","import React, { useState, useCallback, useRef, useEffect } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport './App.css';\nimport { NoProfilePictureIconComponent } from './Icons/NoProfilePicture.component'\n\nfunction App() {\n\n  const [imagePreview, setImagePreview] = useState('')\n\n  const videoRef = useRef(null)\n  const photoRef = useRef(null)\n\n  const imgRef = useRef(null)\n\n  const previewCanvasRef = useRef(null)\n  const [crop, setCrop] = useState({ unit: '%', width: 90, height: 100})\n  const [completedCrop, setCompletedCrop] = useState(null)\n\n  useEffect(() => {\n    getVideo()\n\n    if (!completedCrop || !previewCanvasRef.current || !imgRef.current) {\n      return\n    }\n\n    const image = imgRef.current\n    const canvas = previewCanvasRef.current\n    const crop = completedCrop\n\n    const scaleX = image.naturalWidth / image.width\n    const scaleY = image.naturalHeight / image.height\n    const ctx = canvas.getContext('2d')\n    const pixelRatio = window.devicePixelRatio\n    canvas.width = crop.width * pixelRatio\n    canvas.height = crop.height * pixelRatio\n\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0)\n    ctx.imageSmoothingQuality = 'high'\n\n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width,\n      crop.height,\n    )\n\n  }, [videoRef, completedCrop])\n\n  const onLoad = useCallback((img) => {\n    imgRef.current = img\n  }, [])\n\n  const onCropChange = (c) => {\n    setCrop(c)\n  }\n\n  const onCropComplete = (c) => {\n    setCompletedCrop(c)\n  }\n\n  const showImagePreview = (url) => {\n    console.log('event.target.files[0]', url)\n    setImagePreview(url)\n  }\n\n  const onImageUpload = (event) => {\n    if (event.target.files !== null) {\n      const file = event.target.files[0]\n      // const base64 = ConvertFileAsBase64(file)\n      // console.log('******base64*******', base64)\n      const imageUrl = URL.createObjectURL(file)\n      showImagePreview(imageUrl)\n    }\n  }\n\n  const getVideo = () => {\n    if (!navigator.mediaDevices) return\n    navigator.mediaDevices.getUserMedia({ video: { width: 300 }, audio: false })\n      .then((stream) => {\n        const video = videoRef.current\n        if (!video) return\n        // @ts-ignore\n        video.srcObject = stream\n        // @ts-ignore\n        video.play()\n      })\n      .catch((error) => {\n        console.log('error', error)\n      })\n  }\n\n  const getSnapshot = () => {\n    const video = videoRef.current\n    const photo = photoRef.current\n\n    const ctx = photo.getContext('2d')\n\n    const width = 320\n    const height = 240\n\n    photo.width = width\n    photo.height = height\n\n    return setInterval(() => {\n      ctx.drawImage(video, 0, 0, width, height)\n    }, 200)\n  }\n\n  const takePhoto = () => {\n    const photo = photoRef.current\n    const data = photo.toDataURL('image/jpeg')\n    setImagePreview(data)\n  }\nconst generateDownload = (canvas, crop) => {\n  if (!crop || !canvas) {\n    return\n  }\n  \n  canvas.toBlob(\n    (blob) => {\n      const previewUrl = URL.createObjectURL(blob)\n      setImagePreview(previewUrl)\n      // const previewUrl = window.URL.createObjectURL(blob);\n\n      // const anchor = document.createElement(\"a\");\n      // anchor.download = \"cropPreview.png\";\n      // anchor.href = URL.createObjectURL(blob)\n      // anchor.click()\n\n      // window.URL.revokeObjectURL(previewUrl);\n    },\n    \"image/png\",\n    1\n  );\n}\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        { imagePreview\n          ? <img src={imagePreview} alt=\"alt\" width=\"90\" height=\"100\" style={{ objectFit: 'cover'}}/>\n          : <NoProfilePictureIconComponent /> }\n        <h3>-----------------------------Testing Upload-----------------------------</h3>\n        <input\n          type=\"file\"\n          id=\"picture\"\n          name=\"picture\"\n          required\n          accept=\"image/*\"\n          onChange={onImageUpload}\n        />\n        <h3>-----------------------------Testing WebCam-----------------------------</h3>\n        <video onCanPlay={() => getSnapshot()} ref={videoRef} />\n        <button type=\"button\" onClick={() => takePhoto()}>Take a photo with the webcam</button>\n        <canvas ref={photoRef} style={{ display: 'none' }} />\n        <h3>-----------------------------Testing Crop-----------------------------</h3>\n        { !imagePreview && !crop\n        ? null\n        : (\n          <ReactCrop\n            src={imagePreview}\n            onImageLoaded={onLoad}\n            crop={crop}\n            onChange={onCropChange}\n            onComplete={onCropComplete}\n            style={{ width: '170px', heigh:'auto'}}\n          />\n        ) }\n        <div>\n        <canvas\n          ref={previewCanvasRef}\n          // Rounding is important so the canvas width and height matches/is a multiple for sharpness.\n             style={{\n                display: 'none',\n                width: Math.round(completedCrop?.width ?? 0),\n                height: Math.round(completedCrop?.height ?? 0),\n           }}\n        />\n        <button\n          type=\"button\"\n          disabled={!completedCrop?.width || !completedCrop?.height}\n          onClick={() =>\n            generateDownload(previewCanvasRef.current, completedCrop)\n          }\n        >\n        Select this image\n      </button>\n      </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}